// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projet_mini_api.Data;

#nullable disable

namespace projet_mini_api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MealRestaurant", b =>
                {
                    b.Property<int>("MealsId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantsId")
                        .HasColumnType("int");

                    b.HasKey("MealsId", "RestaurantsId");

                    b.HasIndex("RestaurantsId");

                    b.ToTable("MealRestaurant");
                });

            modelBuilder.Entity("projet_mini_api.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DateModified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdMealAPI")
                        .HasColumnType("int");

                    b.Property<string>("StrArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrCreativeCommonsConfirmed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDrinkAlternate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrImageSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMealThumb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrYoutube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("projet_mini_api.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("MealRestaurant", b =>
                {
                    b.HasOne("projet_mini_api.Models.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projet_mini_api.Models.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
